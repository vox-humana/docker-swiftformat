# https://docs.docker.com/ci-cd/github-actions/
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
name: Build and Publish

on:
  workflow_dispatch:
    inputs:
      swiftformat-version:
        description: SwiftFormat version
        required: true
      docker-publish:
        description: Publish to the registries
        default: "true"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Resolve tags
        id: resolve-tags
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/swiftformat
          GITHUB_IMAGE=ghcr.io/${{ github.repository }}
          VERSION=${{ github.event.inputs.swiftformat-version }}
          LATEST_VERSION=$(
            curl --silent \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/nicklockwood/SwiftFormat/releases/latest |
              jq -r .tag_name
          )
          TAGS="${DOCKER_IMAGE}:${VERSION},${GITHUB_IMAGE}:${VERSION}"          
          if [[ $LATEST_VERSION == $VERSION ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest,${GITHUB_IMAGE}:latest"
          fi
          echo "Tags: ${TAGS}"
          echo ::set-output name=tags::${TAGS}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Log in to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          build-args: |
            swift_format_version=${{ github.event.inputs.swiftformat-version }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64
          push: ${{ github.event.inputs.docker-publish == 'true' }}
          tags: ${{ steps.resolve-tags.outputs.tags }}
